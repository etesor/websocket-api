AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Websocket-api

  SAM Template for a simple websocket API that returns a random word from DynamoDB when invoked.

Globals:
  Function:
    Timeout: 3

Resources:
  RandomAPIWebsocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ReturnRandom
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ReturnRandomRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref RandomAPIWebsocket
      RouteKey: getrandom
      AuthorizationType: NONE
      OperationName: getRandomRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref RandomIntegration
  RandomIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref RandomAPIWebsocket
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetRandomWordFunction.Arn}/invocations
  PutWordsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref RandomAPIWebsocket
      RouteKey: putwords
      AuthorizationType: NONE
      OperationName: putWordsRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref PutWordsIntegration
  PutWordsIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref RandomAPIWebsocket
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutWordsFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ReturnRandomRoute
    Properties:
      ApiId: !Ref RandomAPIWebsocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Dev
      Description: Development Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref RandomAPIWebsocket
  WordsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: RandomWords
      PrimaryKey:
        Name: word
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  PutWordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: putwords/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WordsTable
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RandomAPIWebsocket}/*'
      Environment:
        Variables:
          TABLE_NAME: !Ref WordsTable
  PutWordsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PutWordsFunction
      Principal: apigateway.amazonaws.com
  GetRandomWordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: random/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WordsTable
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RandomAPIWebsocket}/*'
      Environment:
        Variables:
          TABLE_NAME: !Ref WordsTable
  GetRandomWordPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetRandomWordFunction
      Principal: apigateway.amazonaws.com

